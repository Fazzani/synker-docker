version: "3.5"

services:
  cadvisor:
    image: google/cadvisor:${CADVISOR_VERSION:-v0.33.0}
    networks:
      - monitoring
      - ntw_front
    ports:
      - "8123:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run:/var/run:ro
      - /dev/disk/:/dev/disk:ro
      - /:/rootfs:ro
      - /sys:/sys:ro
    # command: -storage_driver="elasticsearch" -alsologtostderr=true -storage_driver_es_host="http://elastic.synker.ovh:9200"
    deploy:
      labels:
      - "traefik.tags=monitoring"
      - "traefik.backend=cadvisor"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:cadvisor.synker.ovh"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$8Dlf//P1$$aE5beYa7YLUDWZ16D9F6b1"
      - "traefik.docker.network=monitoring"
      - "traefik.port=8080"
      - "traefik.enable=true"
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M
  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_log:/var/log/grafana
    ports:
      - "3123:3000"
    secrets:
      - generic_password
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.synker.ovh
      - GF_SERVER_DOMAIN=grafana.synker.ovh
      - GF_SECURITY_ADMIN_PASSWORD=/run/secrets/generic_password
      - GF_AUTH_BASIC_ENABLED=false
      - "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource"
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=heni.fazzani@gmail.com
      - GF_SMTP_PASSWORD=mypassword
      - GF_SMTP_FROM_ADDRESS=heni.fazzani@gmail.com
    networks:
      - ntw_front
      - monitoring
    deploy:
      labels:
      - "traefik.tags=monitoring"
      - "traefik.backend=grafana"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:grafana.synker.ovh"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$8Dlf//P1$$aE5beYa7YLUDWZ16D9F6b1"
      - "traefik.docker.network=monitoring"
      - "traefik.port=3000"
      - "traefik.enable=true"
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 2m
        window: 120s
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
        mode: 0444
    volumes:
      - prometheus_data:/prometheus:rw
    deploy:
      labels:
      - "traefik.tags=monitoring"
      - "traefik.backend=prometheus"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:prometheus.synker.ovh"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$8Dlf//P1$$aE5beYa7YLUDWZ16D9F6b1"
      - "traefik.docker.network=monitoring"
      - "traefik.port=9090"
      - "traefik.enable=true"
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 2m
        window: 120s
    networks:
      - monitoring
volumes:
  grafana_data:
    driver_opts:
      type: "nfs"
      o: "addr=151.80.235.155,nolock,soft,rw"
      device: ":/mnt/nfs/grafana/data"
  grafana_log:
    driver_opts:
      type: "nfs"
      o: "addr=151.80.235.155,nolock,soft,rw"
      device: ":/mnt/nfs/grafana/log"
  prometheus_data:
    driver_opts:
      type: "nfs"
      o: "addr=151.80.235.155,nolock,soft,rw"
      device: ":/mnt/nfs/prometheus/data"
configs:
  prometheus_config:
    file: ./monitoring/prometheus/prometheus.yml
networks:
  ntw_front:
    external: true
  monitoring:
    external: true
secrets:
  generic_password:
    file: generic_password.txt
