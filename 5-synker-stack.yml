version: "3.5"

services:

  webclient:
    image: synker/webclient:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:56801
    configs:
      - source: webclient_config2
        target: /app/appsettings.Production.json
        mode: 0444
    ports:
      - "56801:56801"
    networks:
      - ntw_front
    deploy:
      labels:
      - "traefik.backend=webclient"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      # - "traefik.frontend.auth.basic=admin:$$apr1$$8Dlf//P1$$aE5beYa7YLUDWZ16D9F6b1"
      - "traefik.frontend.rule=Host:synker.ovh,www.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=56801"
      - "traefik.enable=true"
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      placement:
        constraints:
          - node.labels.provider == ovh
      restart_policy:
        condition: on-failure
        delay: 2m
        window: 120s
    depends_on:
      - webapi

  webapi:
    image: synker/webapi:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    configs:
      - source: webapi_config2
        target: /app/appsettings.Production.json
        mode: 0444
    ports:
      - "56800:56800"
    networks:
      - ntw_front
    deploy:
      labels:
      - "traefik.backend=webapi"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:api.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=56800"
      - "traefik.enable=true"
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      placement:
        constraints:
          - node.labels.provider == ovh
      restart_policy:
        condition: on-failure
        delay: 2m
        window: 120s

  batch:
    image: synker/batch:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    configs:
      - source: batch_config2
        target: /app/appsettings.Production.json
        mode: 0444
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
      placement:
        constraints: 
          - node.role == manager
          - node.labels.size == small
    networks:
      - ntw_front

  synkerdb:
    image: postgres
    ports:
      - "5432:5432"
    networks:
      - ntw_front
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER: "pl"
      POSTGRES_DB: "playlist"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5m
        max_attempts: 3
        window: 120s
      placement:
        constraints: 
          - node.labels.size == large
    secrets:
      - postgres_password

  adminer:
    image: adminer
    ports:
      - "8088:8080"
    deploy:
      labels:
      - "traefik.backend=adminer"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:adminer.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=8080"
      - "traefik.enable=true"
      placement:
        constraints:
          - node.labels.provider == ovh
      restart_policy:
        condition: on-failure
        delay: 2m
        window: 120s
    networks:
      - ntw_front

volumes:
  postgres_data:
    driver_opts:
      type: "nfs"
      o: "nolock,soft,rw,addr=151.80.235.155"
      device: ":/mnt/nfs/postgres/data"
  synker_data:
    driver_opts:
      type: "nfs"
      o: "nolock,soft,rw,addr=151.80.235.155"
      device: ":/mnt/nfs/synker/data"
secrets:
  postgres_password:
    file: postgres_password.txt
  
networks:
  ntw_front:
    external: true

configs:
  webapi_config2:
    file: ./synker/appsettings.webapi.json
  webclient_config2:
    file: ./synker/appsettings.webclient.json
  batch_config2:
    file: ./synker/appsettings.json
