version: "3.3"

services:

  webclient:
    image: synker/webclient:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    configs:
      - source: webclient_config
        target: /home/synker/webclient/appsettings.production.json
        mode: 0440
    ports:
      - "88:80"
    networks:
      - ingress_net_backend
    deploy:
      labels:
      - "traefik.backend=webclient"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:synker.ovh"
      - "traefik.docker.network=ingress_net_backend"
      - "traefik.port=88"
      - "traefik.enable=true"
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: unless-stopped
    depends_on:
      - webapi

  webapi:
    image: synker/webapi:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    configs:
      - source: webapi_config
        target: /home/synker/webapi/appsettings.production.json
        mode: 0440
    ports:
      - "89:80"
    networks:
      - ingress_net_backend
    deploy:
      labels:
      - "traefik.backend=webapi"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:webapi.synker.ovh"
      - "traefik.docker.network=ingress_net_backend"
      - "traefik.port=89"
      - "traefik.enable=true"
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: unless-stopped

  brokers:
    image: synker/brokers:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: unless-stopped
    networks:
      - ingress_net_backend

  batch:
    image: synker/batch:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      restart_policy:
        condition: unless-stopped
      placement:
        constraints: 
          - node.role == manager
          - node.labels.size == small
    networks:
      - ingress_net_backend

networks:
  ingress_net_backend:
    external: true

configs:
  webapi_config:
    file: $PWD/appsettings.webapi.json
  webclient_config:
    file: $PWD/appsettings.webclient.json

volumes:
  synker_data:
    driver_opts:
      type: "nfs"
      o: "nolock,soft,rw,addr=35.156.117.97"
      device: ":/webgrab_volume/synker/data"