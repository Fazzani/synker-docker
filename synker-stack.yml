version: "3.5"

services:

  webclient:
    image: synker/webclient:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    configs:
      - source: webclient_config
        target: /app/appsettings.Production.json
        mode: 0444
    ports:
      - "56801:56801"
    networks:
      - ntw_front
    deploy:
      labels:
      - "traefik.backend=webclient"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:www.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=56801"
      - "traefik.enable=true"
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      - webapi

  webapi:
    image: synker/webapi:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    configs:
      - source: webapi_config
        target: /app/appsettings.Production.json
        mode: 0444
    ports:
      - "56800:56800"
    networks:
      - ntw_front
    deploy:
      labels:
      - "traefik.backend=webapi"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:api.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=56800"
      - "traefik.enable=true"
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints:
          - node.labels.provider == ovh
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  brokers:
    image: synker/brokers:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 5
        window: 60s
    networks:
      - ntw_front

  batch:
    image: synker/batch:${SYNKER_VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 5
        window: 60s
      placement:
        constraints: 
          - node.role == manager
          - node.labels.size == small
    networks:
      - ntw_front

  synkerdb:
    image: mariadb:${MYSQL_VERSION}
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_PASSWORD: /run/secrets/mysql_password
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_DATABASE: playlist
      MYSQL_ROOT_HOST: "%"
    ports:
      - "8889:3306"
    networks:
      - ntw_front
    volumes:
      - mariadb_data:/var/lib/mysql:rw
    deploy:
     mode: replicated
     replicas: 1
     restart_policy:
       condition: on-failure
       delay: 20m
       max_attempts: 3
       window: 120s
     placement:
       constraints: 
         - node.labels.size == large
    secrets:
      - mysql_password
      - mysql_root_password

volumes:
  mariadb_data:
    driver_opts:
      type: "nfs"
      o: "nolock,soft,rw,addr=35.156.117.97"
      device: ":/webgrab_volume/mariadb/data"
  synker_data:
    driver_opts:
      type: "nfs"
      o: "nolock,soft,rw,addr=35.156.117.97"
      device: ":/webgrab_volume/synker/data"

secrets:
  mysql_password:
    file: mysql_password.txt
  mysql_root_password:
    file: mysql_root_password.txt
networks:
  ntw_front:
    external: true

configs:
  webapi_config:
    file: $PWD/synker/appsettings.webapi.json
  webclient_config:
    file: $PWD/synker/appsettings.webclient.json
