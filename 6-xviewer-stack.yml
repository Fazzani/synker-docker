version: "3.5"

services:

  xviewer:
    image: synker/xviewer:${XVIEWER_VERSION:-latest}
    environment:
      - NODE_ENV=production
    ports:
      - "5000:5000"
    networks:
      - ntw_front
    deploy:
      labels:
      - "traefik.backend=xviewer"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=https"
      - "traefik.frontend.rule=Host:xviewer.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=5000"
      - "traefik.enable=true"
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 120s
  media_server:
    image: synker/synker-media-server:${MEDIA_SERVER_VERSION:-latest}
    networks:
      - ntw_front
    ports:
      - "8000:8000"
      - "1935:1935"
      - "8084:8084"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 180s
        order: start-first
      placement:
        constraints:
          - node.labels.provider == ovh
          - node.role==manager
      labels:
      - "traefik.tags=media"
      - "traefik.backend=media_server"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.rule=Host:holo.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.http.port=8084"
      - "traefik.enable=true"
 
networks:
  ntw_front:
    external: true
