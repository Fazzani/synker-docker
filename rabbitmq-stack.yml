version: "3.3"
services:
  rabbit1:
    image: harbur/rabbitmq-cluster
    hostname: rabbit1
    ports:
      - "5672:5672"
      - "8000:15672"
    deploy:
      labels:
        - "traefik.backend=rabbit1"
        - "traefik.frontend.rule=Host:rabbitmq.synker.ovh"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.enable=true"
        - "traefik.port=8000"
        - "traefik.docker.network=ingress_net_backend"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.backend.loadbalancer.method=drr"
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: 
          - node.labels.size == medium
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    networks:
      - ingress_net_backend

  rabbit2:
    image: harbur/rabbitmq-cluster
    hostname: rabbit2
    ports:
      - "5673:5672"
      - "8001:15672"
    deploy:
      labels:
        - "traefik.backend=rabbit2"
        - "traefik.frontend.rule=Host:rabbitmq.synker.ovh"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.enable=true"
        - "traefik.port=8001"
        - "traefik.docker.network=ingress_net_backend"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.backend.loadbalancer.method=drr"
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: 
          - node.role == manager
          - node.labels.size == small
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - CLUSTERED=true
      - CLUSTER_WITH=rabbit1
      - RAM_NODE=true
    networks:
      - ingress_net_backend
    depends_on:
      - rabbit1

networks:
  ingress_net_backend:
    external: true