version: "3.4"

services:

  traefik_init:
    image: traefik:1.5
    command:
      - "storeconfig"
      - "--api"
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--acme"
      - "--acme.storage=traefik/acme/account"
      - "--acme.entryPoint=https"
      - "--acme.httpChallenge.entryPoint=http"
      - "--acme.OnHostRule=true"
      - "--acme.onDemand=false"
      - "--acme.email=support@synker.ovh"
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.domain=synker.ovh"
      - "--docker.watch"
      - "--consul"
      - "--consul.endpoint=consul:8500"
      - "--consul.prefix=traefik"
    networks:
      - ntw_front
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - consul

  traefik:
    image: traefik:1.5
    depends_on:
      - traefik_init
      - consul
    ports:
    - target: 80
      protocol: tcp
      published: 80
      mode: ingress
    - target: 8080
      protocol: tcp
      published: 8080
      mode: ingress
    networks:
      - ntw_front
    configs:
      - source: traefik.toml
        target: /etc/traefik/traefik.toml
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--consul"
      - "--consul.endpoint=consul:8500"
      - "--consul.prefix=traefik"
      - "--acme.storage=traefik/acme/account"
    deploy:
      mode: global
      labels:
      - "traefik.backend=traefik"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:traefik.synker.ovh"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.docker.network=ntw_front"
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
        max_attempts: 5
      resources:
        limits:
          cpus: '0.33'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M

  visualizer:
    image: dockersamples/visualizer:stable
    stop_grace_period: 1m30s
    ports:
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      labels:
      - "traefik.backend=visualizer"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:visu.synker.ovh"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.docker.network=ntw_front"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.backend.loadbalancer.method=drr"
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.role == manager
          - node.labels.size == small
    networks:
      - ntw_front

  consul:
    image: consul
    command: agent -server -bootstrap-expect=1 -ui -bootstrap -log-level warn -client 0.0.0.0
    volumes:
      - consul_data:/consul/data
    ports:
      - "8500:8500"
      - "8400:8400"
      - "53:8600/udp"
    environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true, "server":true, "enable_debug":true, "disable_update_check": true}'
      - CONSUL_BIND_INTERFACE=eth0
    deploy:
      replicas: 1
      labels:
      - "traefik.backend=consul"
      - "traefik.backend.loadbalancer.swarm=true"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:consul.synker.ovh"
      - "traefik.docker.network=ntw_front"
      - "traefik.port=8500"
      - "traefik.enable=true"
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    networks:
      - ntw_front

  who2:
    image: emilevauge/whoami
    networks:
      - ntw_front
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 5
      resources:
        limits:
          cpus: '0.20'
          memory: 9M
        reservations:
          cpus: '0.05'
          memory: 9M
      labels:
      - traefik.backend=who2
      - "traefik.frontend.rule=PathPrefixStrip:/who2"
      - "traefik.frontend.entryPoints=http,https"
      - traefik.port=80
      - traefik.enable=true
      - traefik.passHostHeader=true
      - traefik.docker.network=ntw_front
      - traefik.backend.loadbalancer.swarm=true
      - traefik.backend.loadbalancer.method=drr

networks:
  elk_elk:
    external: true
  ntw_front:
    external: true

volumes:
  consul_data:
    driver_opts:
      type: "nfs"
      o: "nolock,soft,rw,addr=35.156.117.97"
      device: ":/webgrab_volume/consul/data"
configs:
  traefik.toml:
    file: ./configs/traefik.toml