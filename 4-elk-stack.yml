version: "3.3"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${TAG:-6}
    environment:
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - discovery.zen.minimum_master_nodes=1
      #- ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - node.name=elasticsearch
      - node.ingest=true
      - script.painless.regex.enabled=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-credentials=true
      - "http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE"
      - "http.cors.allow-headers=X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept"
      #- xpack.security.enabled=false
      #- xpack.monitoring.enabled=false
      #- xpack.ml.enabled=false
      #- xpack.graph.enabled=false
      #- xpack.watcher.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - /mnt/nfs/elastic/synkerconfig/stopwords.txt:/usr/share/elasticsearch/synkerconfig/stopwords.txt
      - /mnt/nfs/elastic/config/mapping_synker.txt:/usr/share/elasticsearch/config/mapping_synker.txt
    networks:
      - ntw_front
    ports:
      - ${ELASTICSEARCH_PORT:-9200}:9200
    deploy:
      labels:
        - "traefik.backend=elasticsearch"
        - "traefik.frontend.rule=Host:elastic.synker.ovh"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.port=${ELASTICSEARCH_PORT:-9200}"
        - "traefik.enable=true"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.backend.loadbalancer.method=drr"
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 20m
        max_attempts: 3
        window: 120s
      placement:
        constraints: 
          - node.labels.size == large

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${TAG:-6.3.0}
    ports:
      - 5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:${ELASTICSEARCH_PORT:-9200}
      # - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      # - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    networks:
      - ntw_front
    deploy:
      labels:
       - "traefik.backend=kibana"
       - "traefik.frontend.rule=Host:kibana.synker.ovh"
       - "traefik.frontend.entryPoints=http,https"
       - "traefik.frontend.auth.basic.users=admin:$$apr1$$8Dlf//P1$$aE5beYa7YLUDWZ16D9F6b1"
       - "traefik.backend.loadbalancer.swarm=true"
       - "traefik.backend.loadbalancer.method=drr"
       - "traefik.enable=true"
       - "traefik.port=5601"
       - "traefik.docker.network=ntw_front"
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 3m
        max_attempts: 3
        window: 120s
      placement:
        constraints: 
          - node.role == worker
          - node.labels.size == medium
    # healthcheck:
    #   test: wget -qO- http://kibana:5601 > /dev/null
    #   interval: 20m
    #   retries: 3
    volumes:
      - kibana_data:/usr/share/kibana/data

volumes:
  elasticsearch_data:
     driver_opts:
      type: "nfs"
      #o: "rw,relatime,vers=4.1,rsize=65536,wsize=65536,namlen=255,nolock,soft,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,local_lock=none,no_root_squash,addr=151.80.235.155"
      o: "addr=151.80.235.155,nolock,soft,rw"
      device: ":/mnt/nfs/elastic/data"
  
  kibana_data:
     driver: local
     driver_opts:
      type: "nfs"
      o: "addr=151.80.235.155,nolock,soft,rw"
      device: ":/mnt/nfs/kibana/data"
  
networks:
  ntw_front:
    external: true
  ingress_net_backend:
    external: true