global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'smtp.sendgrid.net:587'
  smtp_from: 'alertmanager@gmail.com'
  smtp_auth_username: 'apikey'
  smtp_auth_password: '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'
  # smtp_require_tls: false
  # smtp_hello: 'alert.synker.ovh'
  
  slack_api_url: 'https://api.slack.com/apps/AJ0UFPCKX-monitoring'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  #
  # To aggregate by all possible labels use '...' as the sole label name.
  # This effectively disables aggregation entirely, passing through all
  # alerts as-is. This is unlikely to be what you want, unless you have
  # a very low alert volume or your upstream notification system performs
  # its own grouping. Example: group_by: [...]
  group_by: ['alertname', 'cluster', 'service']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first 
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h 

  # A default receiver
  receiver: slack_general

  # All the above attributes are inherited by all child routes and can 
  # overwritten on each.

  # The child route trees.
  routes:
  - match:
    severity: warning
    receiver: perso_outlook_email
  - match:
    severity: critical
    receiver: slack_general

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is 
# already critical.
inhibit_rules:
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  # Apply inhibition if the alertname is the same.
  equal: ['alertname', 'cluster', 'service']


receivers:
- name: 'perso_gmail_email'
  email_configs:
  - to: 'heni.fazzani@gmail.com'

- name: 'perso_outlook_email'
  email_configs:
  - to: 'fazzani.heni@outlook.fr'

- name: slack_general
  slack_configs:
  - send_resolved: true
    username: 'tara gurung'
    channel: '#general'
    api_url: 'https://hooks.slack.com/services/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'

notify: true